<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bpzj.web.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.bpzj.web.domain.Student">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="entry_time" jdbcType="VARCHAR" property="entryTime" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="link" jdbcType="VARCHAR" property="link" />
    <result column="oath" jdbcType="VARCHAR" property="oath" />
    <result column="brother" jdbcType="VARCHAR" property="brother" />
    <result column="knowfrom" jdbcType="VARCHAR" property="knowfrom" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_at, update_at, name, qq, type, entry_time, school, student_id, link, oath, 
    brother, knowfrom
  </sql>
  <select id="selectByExample" parameterType="com.bpzj.web.domain.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bpzj.web.domain.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bpzj.web.domain.Student">
    insert into student (id, create_at, update_at, 
      name, qq, type, entry_time, 
      school, student_id, link, 
      oath, brother, knowfrom
      )
    values (#{id,jdbcType=BIGINT}, #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{entryTime,jdbcType=VARCHAR}, 
      #{school,jdbcType=VARCHAR}, #{studentId,jdbcType=INTEGER}, #{link,jdbcType=VARCHAR}, 
      #{oath,jdbcType=VARCHAR}, #{brother,jdbcType=VARCHAR}, #{knowfrom,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bpzj.web.domain.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
        create_at,
        update_at,
      <if test="name != null">
        name,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="entryTime != null">
        entry_time,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="oath != null">
        oath,
      </if>
      <if test="brother != null">
        brother,
      </if>
      <if test="knowfrom != null">
        knowfrom,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
        NOW(),
        NOW(),
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="entryTime != null">
        #{entryTime,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="oath != null">
        #{oath,jdbcType=VARCHAR},
      </if>
      <if test="brother != null">
        #{brother,jdbcType=VARCHAR},
      </if>
      <if test="knowfrom != null">
        #{knowfrom,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bpzj.web.domain.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=BIGINT},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.entryTime != null">
        entry_time = #{record.entryTime,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.link != null">
        link = #{record.link,jdbcType=VARCHAR},
      </if>
      <if test="record.oath != null">
        oath = #{record.oath,jdbcType=VARCHAR},
      </if>
      <if test="record.brother != null">
        brother = #{record.brother,jdbcType=VARCHAR},
      </if>
      <if test="record.knowfrom != null">
        knowfrom = #{record.knowfrom,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set id = #{record.id,jdbcType=BIGINT},
      create_at = #{record.createAt,jdbcType=BIGINT},
      update_at = #{record.updateAt,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      entry_time = #{record.entryTime,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=INTEGER},
      link = #{record.link,jdbcType=VARCHAR},
      oath = #{record.oath,jdbcType=VARCHAR},
      brother = #{record.brother,jdbcType=VARCHAR},
      knowfrom = #{record.knowfrom,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bpzj.web.domain.Student">
    update student
    <set>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="entryTime != null">
        entry_time = #{entryTime,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="link != null">
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="oath != null">
        oath = #{oath,jdbcType=VARCHAR},
      </if>
      <if test="brother != null">
        brother = #{brother,jdbcType=VARCHAR},
      </if>
      <if test="knowfrom != null">
        knowfrom = #{knowfrom,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bpzj.web.domain.Student">
    update student
    set create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      entry_time = #{entryTime,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=INTEGER},
      link = #{link,jdbcType=VARCHAR},
      oath = #{oath,jdbcType=VARCHAR},
      brother = #{brother,jdbcType=VARCHAR},
      knowfrom = #{knowfrom,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>