<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bpzj.task4.dao.JobMapper">
  <resultMap id="BaseResultMap" type="com.bpzj.task4.domain.Job">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="job_id" jdbcType="INTEGER" property="jobId" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="entry_barrier" jdbcType="INTEGER" property="entryBarrier" />
    <result column="difficult_level" jdbcType="INTEGER" property="difficultLevel" />
    <result column="grow_time" jdbcType="VARCHAR" property="growTime" />
    <result column="firm_required_num" jdbcType="INTEGER" property="firmRequiredNum" />
    <result column="salary1" jdbcType="VARCHAR" property="salary1" />
    <result column="salary2" jdbcType="VARCHAR" property="salary2" />
    <result column="salary3" jdbcType="VARCHAR" property="salary3" />
    <result column="tips" jdbcType="VARCHAR" property="tips" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, job_id, job_name, introduce, entry_barrier, difficult_level, grow_time, firm_required_num, 
    salary1, salary2, salary3, tips, create_at, update_at
  </sql>
  <select id="selectByExample" parameterType="com.bpzj.task4.domain.JobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from job
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bpzj.task4.domain.JobExample">
    delete from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bpzj.task4.domain.Job">
    insert into job (id, job_id, job_name, 
      introduce, entry_barrier, difficult_level, 
      grow_time, firm_required_num, salary1, 
      salary2, salary3, tips, 
      create_at, update_at)
    values (#{id,jdbcType=INTEGER}, #{jobId,jdbcType=INTEGER}, #{jobName,jdbcType=VARCHAR}, 
      #{introduce,jdbcType=VARCHAR}, #{entryBarrier,jdbcType=INTEGER}, #{difficultLevel,jdbcType=INTEGER}, 
      #{growTime,jdbcType=VARCHAR}, #{firmRequiredNum,jdbcType=INTEGER}, #{salary1,jdbcType=VARCHAR}, 
      #{salary2,jdbcType=VARCHAR}, #{salary3,jdbcType=VARCHAR}, #{tips,jdbcType=VARCHAR}, 
      #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.bpzj.task4.domain.Job">
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="jobId != null">
        job_id,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="entryBarrier != null">
        entry_barrier,
      </if>
      <if test="difficultLevel != null">
        difficult_level,
      </if>
      <if test="growTime != null">
        grow_time,
      </if>
      <if test="firmRequiredNum != null">
        firm_required_num,
      </if>
      <if test="salary1 != null">
        salary1,
      </if>
      <if test="salary2 != null">
        salary2,
      </if>
      <if test="salary3 != null">
        salary3,
      </if>
      <if test="tips != null">
        tips,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="entryBarrier != null">
        #{entryBarrier,jdbcType=INTEGER},
      </if>
      <if test="difficultLevel != null">
        #{difficultLevel,jdbcType=INTEGER},
      </if>
      <if test="growTime != null">
        #{growTime,jdbcType=VARCHAR},
      </if>
      <if test="firmRequiredNum != null">
        #{firmRequiredNum,jdbcType=INTEGER},
      </if>
      <if test="salary1 != null">
        #{salary1,jdbcType=VARCHAR},
      </if>
      <if test="salary2 != null">
        #{salary2,jdbcType=VARCHAR},
      </if>
      <if test="salary3 != null">
        #{salary3,jdbcType=VARCHAR},
      </if>
      <if test="tips != null">
        #{tips,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bpzj.task4.domain.JobExample" resultType="java.lang.Long">
    select count(*) from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update job
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.jobId != null">
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.jobName != null">
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.entryBarrier != null">
        entry_barrier = #{record.entryBarrier,jdbcType=INTEGER},
      </if>
      <if test="record.difficultLevel != null">
        difficult_level = #{record.difficultLevel,jdbcType=INTEGER},
      </if>
      <if test="record.growTime != null">
        grow_time = #{record.growTime,jdbcType=VARCHAR},
      </if>
      <if test="record.firmRequiredNum != null">
        firm_required_num = #{record.firmRequiredNum,jdbcType=INTEGER},
      </if>
      <if test="record.salary1 != null">
        salary1 = #{record.salary1,jdbcType=VARCHAR},
      </if>
      <if test="record.salary2 != null">
        salary2 = #{record.salary2,jdbcType=VARCHAR},
      </if>
      <if test="record.salary3 != null">
        salary3 = #{record.salary3,jdbcType=VARCHAR},
      </if>
      <if test="record.tips != null">
        tips = #{record.tips,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=BIGINT},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update job
    set id = #{record.id,jdbcType=INTEGER},
      job_id = #{record.jobId,jdbcType=INTEGER},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      entry_barrier = #{record.entryBarrier,jdbcType=INTEGER},
      difficult_level = #{record.difficultLevel,jdbcType=INTEGER},
      grow_time = #{record.growTime,jdbcType=VARCHAR},
      firm_required_num = #{record.firmRequiredNum,jdbcType=INTEGER},
      salary1 = #{record.salary1,jdbcType=VARCHAR},
      salary2 = #{record.salary2,jdbcType=VARCHAR},
      salary3 = #{record.salary3,jdbcType=VARCHAR},
      tips = #{record.tips,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=BIGINT},
      update_at = #{record.updateAt,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bpzj.task4.domain.Job">
    update job
    <set>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="entryBarrier != null">
        entry_barrier = #{entryBarrier,jdbcType=INTEGER},
      </if>
      <if test="difficultLevel != null">
        difficult_level = #{difficultLevel,jdbcType=INTEGER},
      </if>
      <if test="growTime != null">
        grow_time = #{growTime,jdbcType=VARCHAR},
      </if>
      <if test="firmRequiredNum != null">
        firm_required_num = #{firmRequiredNum,jdbcType=INTEGER},
      </if>
      <if test="salary1 != null">
        salary1 = #{salary1,jdbcType=VARCHAR},
      </if>
      <if test="salary2 != null">
        salary2 = #{salary2,jdbcType=VARCHAR},
      </if>
      <if test="salary3 != null">
        salary3 = #{salary3,jdbcType=VARCHAR},
      </if>
      <if test="tips != null">
        tips = #{tips,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bpzj.task4.domain.Job">
    update job
    set job_id = #{jobId,jdbcType=INTEGER},
      job_name = #{jobName,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      entry_barrier = #{entryBarrier,jdbcType=INTEGER},
      difficult_level = #{difficultLevel,jdbcType=INTEGER},
      grow_time = #{growTime,jdbcType=VARCHAR},
      firm_required_num = #{firmRequiredNum,jdbcType=INTEGER},
      salary1 = #{salary1,jdbcType=VARCHAR},
      salary2 = #{salary2,jdbcType=VARCHAR},
      salary3 = #{salary3,jdbcType=VARCHAR},
      tips = #{tips,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>